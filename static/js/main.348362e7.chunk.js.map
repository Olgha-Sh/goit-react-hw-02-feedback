{"version":3,"sources":["Components/SectionTitle/SectionTitle.styles.js","Components/SectionTitle/SectionTitle.jsx","Components/FeedbackOptions/FeedbackOptions.styles.js","Components/FeedbackOptions/FeedbackOptions.jsx","Components/Statistics/Statistics.styles.js","Components/Statistics/Statistics.jsx","Components/Notification/Notification.styles.js","Components/Notification/Notification.jsx","Components/Feedback/Feedback.jsx","App.js","index.js"],"names":["Title","styled","h2","Section","section","SectionTitle","title","children","FeedbackButton","button","FeedbackWrapper","div","FeedbackSelectBtn","options","onCounterFeedback","map","option","key","type","onClick","StatisticList","Statistics","good","neutral","bad","total","positiveFeedbackPercentage","totalFeedback","positiveFeedback","Span","span","Notification","message","defaultProps","feedbackArr","Feedback","useState","setGood","setNeutral","setBad","countTotalFeedback","FeedbackOptions","e","target","textContent","Math","round","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"scAEO,IAAMA,EAAQC,IAAOC,GAAV,KAGLC,EAAUF,IAAOG,QAAV,KCYLC,EAbM,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC7B,OACE,kBAACJ,EAAD,KACE,kBAACH,EAAD,KAAQM,GACPC,I,+SCNA,IAAMC,EAAiBP,IAAOQ,OAAV,KAQdC,EAAkBT,IAAOU,IAAV,KCWbC,EAjBW,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,kBACpC,OACE,kBAACJ,EAAD,KACGG,EAAQE,KAAI,SAACC,GAAD,OACX,kBAACR,EAAD,CAAgBS,IAAKD,EAAQE,KAAK,SAASC,QAASL,GACjDE,Q,+LCPJ,IAAMI,EAAgBnB,IAAOU,IAAV,KC6BXU,EA3BI,SAAC,GAMb,IALLC,EAKI,EALJA,KACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,IACAC,EAEI,EAFJA,MACAC,EACI,EADJA,2BAEMC,EAAgBF,IAChBG,EAAmBF,IACzB,OACE,kBAACN,EAAD,KACE,qCAAWE,GACX,wCAAcC,GACd,oCAAUC,GACV,sCAAYG,GACZ,kDAAwBC,EAAxB,Q,4FCjBC,IAAMC,EAAO5B,IAAO6B,KAAV,KCEXC,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,kBAACH,EAAD,KAAOG,IAOhBD,EAAaE,aAAe,CAC1BD,QAAS,qBAGID,QCXTG,EAAc,CAAC,OAAQ,UAAW,OAuDzBC,MArDf,WAAqB,IAAD,EACMC,mBAAS,GADf,mBACXd,EADW,KACLe,EADK,OAEYD,mBAAS,GAFrB,mBAEXb,EAFW,KAEFe,EAFE,OAGIF,mBAAS,GAHb,mBAGXZ,EAHW,KAGNe,EAHM,KAoBZC,EAAqB,kBAAMlB,EAAOE,EAAMD,GAS9C,OACE,oCACE,kBAAC,EAAD,CAAcjB,MAAO,yBACnB,kBAACmC,EAAD,CACE5B,QAASqB,EACTpB,kBA9BsB,SAAC4B,GAE7B,OADeA,EAAEC,OAAOC,aAEtB,IAAK,OACHP,EAAQf,EAAO,GACf,MACF,IAAK,UACHgB,EAAWf,EAAU,GACrB,MACF,IAAK,MACHgB,EAAOf,EAAM,QAuBf,kBAAC,EAAD,CAAclB,MAAO,cAClBkC,IACC,kBAAC,EAAD,CACElB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOe,EACPd,2BAtB8B,WACtC,IAAMD,EAAQe,IACd,OAAIf,EACKoB,KAAKC,MAAc,IAAPxB,EAAcG,GAE5B,KAoBD,kBAAC,EAAD,CAAcO,QAAS,yBChDlBe,MAHf,WACE,OAAO,kBAAC,EAAD,OCCTC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.348362e7.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Title = styled.h2`\n  display: block;\n`;\nexport const Section = styled.section`\n  display: block;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Section, Title } from \"./SectionTitle.styles\";\n\nconst SectionTitle = ({ title, children }) => {\n  return (\n    <Section>\n      <Title>{title}</Title>\n      {children}\n    </Section>\n  );\n};\n\nSectionTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\nexport default SectionTitle;\n","import styled from \"styled-components\";\n\nexport const FeedbackButton = styled.button`\n  display: block;\n  margin-right: 10px;\n  font-weight: 600;\n  border: 1px solid #bfbfbf;\n  border-radius: 0.5em;\n  padding: 0.3em 0.5em;\n`;\nexport const FeedbackWrapper = styled.div`\n  display: flex;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FeedbackWrapper, FeedbackButton } from \"./FeedbackOptions.styles\";\n\nconst FeedbackSelectBtn = ({ options, onCounterFeedback }) => {\n  return (\n    <FeedbackWrapper>\n      {options.map((option) => (\n        <FeedbackButton key={option} type=\"button\" onClick={onCounterFeedback}>\n          {option}\n        </FeedbackButton>\n      ))}\n    </FeedbackWrapper>\n  );\n};\n\nFeedbackSelectBtn.propTypes = {\n  options: PropTypes.array.isRequired,\n  onCounterFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackSelectBtn;\n","import styled from \"styled-components\";\n\nexport const StatisticList = styled.div`\n  display: block;\n  p {\n    font-weight: 600;\n    margin: 0;\n    margin-bottom: 0.3em;\n    font-size: 1.2em;\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { StatisticsString, StatisticList } from \"./Statistics.styles\";\n\nconst Statistics = ({\n  good,\n  neutral,\n  bad,\n  total,\n  positiveFeedbackPercentage,\n}) => {\n  const totalFeedback = total();\n  const positiveFeedback = positiveFeedbackPercentage();\n  return (\n    <StatisticList>\n      <p> Good: {good}</p>\n      <p> Neutral: {neutral}</p>\n      <p> Bad: {bad}</p>\n      <p> Total: {totalFeedback}</p>\n      <p> Positive feedback: {positiveFeedback} %</p>\n    </StatisticList>\n  );\n};\n\nStatistics.propTypes = {\n  total: PropTypes.func.isRequired,\n  positiveFeedbackPercentage: PropTypes.func.isRequired,\n  bad: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  good: PropTypes.number.isRequired,\n};\nexport default Statistics;\n","import styled from \"styled-components\";\n\nexport const Span = styled.span`\n  font-weight: 600;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Span } from \"./Notification.styles\";\n\nconst Notification = ({ message }) => {\n  return <Span>{message}</Span>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nNotification.defaultProps = {\n  message: \"No feedback given\",\n};\n\nexport default Notification;\n","import React, { useState } from \"react\";\nimport SectionTitle from \"../SectionTitle/SectionTitle\";\nimport FeedbackOptions from \"../FeedbackOptions/FeedbackOptions\";\nimport Statistics from \"../Statistics/Statistics\";\nimport Notification from \"../Notification/Notification\";\nconst feedbackArr = [\"good\", \"neutral\", \"bad\"];\n\nfunction Feedback() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const handleCounterFeedback = (e) => {\n    const target = e.target.textContent;\n    switch (target) {\n      case \"good\":\n        setGood(good + 1);\n        break;\n      case \"neutral\":\n        setNeutral(neutral + 1);\n        break;\n      case \"bad\":\n        setBad(bad + 1);\n        break;\n      default:\n        break;\n    }\n  };\n  const countTotalFeedback = () => good + bad + neutral;\n\n  const countPositiveFeedbackPercentage = () => {\n    const total = countTotalFeedback();\n    if (total) {\n      return Math.round((good * 100) / total);\n    }\n    return 0;\n  };\n  return (\n    <>\n      <SectionTitle title={\"Please leave feedback\"}>\n        <FeedbackOptions\n          options={feedbackArr}\n          onCounterFeedback={handleCounterFeedback}\n        />\n      </SectionTitle>\n      <SectionTitle title={\"Statistics\"}>\n        {countTotalFeedback() ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback}\n            positiveFeedbackPercentage={countPositiveFeedbackPercentage}\n          />\n        ) : (\n          <Notification message={\"No feedback given\"} />\n        )}\n      </SectionTitle>\n    </>\n  );\n}\nexport default Feedback;\n","import React from \"react\";\nimport FeedBack from \"./Components/Feedback/Feedback\";\n\nfunction App() {\n  return <FeedBack />;\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}